#!/usr/bin/env node

'use strict'

global.library = 'bundle'

var command = process.argv[2],
    minify  = require('./tasks/minify'),
    build   = require('./tasks/build'),
    watch   = require('./tasks/watch'),
    serve   = require('./tasks/serve'),
    utils   = require('./tasks/_utils')

/**
 * Each task required (except watch) returns a promise so you will be able to chain them as you prefer
 */

switch(command) {
  case 'serve':
    serve()
    break  
  case 'build':
    build()
    break
  case 'watch':
    watch()
    break
  case 'minify':
    minify()
    break  
  case 'saucelabs':
    test({
      saucelabs: true
    })
    break
  default:
    build()      
      .then(minify)     
      .then(function(){
        utils.print('Project successfully compiled!', 'confirm')
      })

}